.container-fluid
    .form-group
        label(for="title") Title
        input.form-control(name="title" type="text" "[(ngModel)]"="actionGroup.title" placeholder="e.g. Symptoms")
    .clearfix
    hr

    h2
        .btn-group.pull-right
            a.btn.btn-default.btn-small(type="button" data-toggle="collapse" data-target="#represented_concepts" aria-expanded="true" aria-controls="represented_concepts")
                span.glyphicon.glyphicon-option-vertical
            a.btn.btn-primary("(click)"="createRepresentedConcept()")
                span.glyphicon.glyphicon-plus
                |  Add

        | Represented Concepts
    .clearfix
    hr
    .collapse.in#represented_concepts

        div("*ngIf"="actionGroup.representedConcepts.length > 0")
            div.contribution.well.row("*ngFor"="let rc of actionGroup.representedConcepts")
                .pull-right
                    button.btn.btn-small.btn-danger("(click)"="deleteRepresentedConcept(rc)")
                        span.glyphicon.glyphicon-trash
                .clearfix
                .col-sm-6.form-group
                    label(for="value_code") Code
                    input.form-control(name="value_code" type="text" "[(ngModel)]"="rc.code" placeholder="D002675")
                .col-sm-6.form-group
                    label(for="value_code_system") Code System
                    input.form-control(name="value_code_system" type="text" "[(ngModel)]"="rc.codeSystem" placeholder="2.16.840.1.113883.11.75")
                .col-sm-6.form-group
                    label(for="value_code_system_name") System Name
                    input.form-control(name="value_code_system_name" type="text" "[(ngModel)]"="rc.codeSystemName" placeholder="MeSH - AgeGroupObservationValue")
                .col-sm-6.form-group
                    label(for="value_display_name") Display Name
                    input.form-control(name="value_display_name" type="text" "[(ngModel)]"="rc.displayName" placeholder="child, preschool; 2 to 5 years")


    h2
        .btn-group.pull-right
            a.btn.btn-default.btn-small(type="button" data-toggle="collapse" data-target="#actions_collapse" aria-expanded="true" aria-controls="actions_collapse")
                span.glyphicon.glyphicon-option-vertical
            a.btn.btn-primary("(click)"="createDeclareResponseAction()")
                span.glyphicon.glyphicon-plus
                |  Declare Response
            a.btn.btn-primary("(click)"="createCollectInformationAction()")
                span.glyphicon.glyphicon-plus
                |  Collection Information
            a.btn.btn-primary("(click)"="createActionGroup()")
                span.glyphicon.glyphicon-plus
                |  Action Group
            a.btn.btn-primary("(click)"="createCreateAction()")
                span.glyphicon.glyphicon-plus
                |  Creation Stub

        | Action List
    .clearfix
    hr
    .collapse.in#actions_collapse

        div("*ngIf"="actionGroup.subElements.length > 0")
            div.action.well("*ngFor"="let action of actionGroup.subElements")
                .btn-group.pull-right
                    a.btn.btn-small.btn-primary("(click)"="moveUp(action)" "*ngIf"="actionGroup.subElements.indexOf(action) > 0")
                        span.glyphicon.glyphicon-chevron-up
                    a.btn.btn-small.btn-primary("(click)"="moveDown(action)" "*ngIf"="actionGroup.subElements.indexOf(action) < actionGroup.subElements.length - 1")
                        span.glyphicon.glyphicon-chevron-down
                    a.btn.btn-small.btn-danger("(click)"="deleteAction(action)")
                        span.glyphicon.glyphicon-trash

                .declare_response_action("*ngIf"="isDeclareResponseAction(action)")
                    h4 Response Declaration
                    .form-group(for="declare_response_name") Name
                        input.form-control(name="declare_response_name" type="text" required="true" "[(ngModel)]"="action.name" placeholder="e.g. Responses")
                .collect_information_action("*ngIf"="isCollectInformationAction(action)")
                    h4 Information Collection
                    .row
                        .col-md-4
                            .form-group
                                label(for="collect_information_prompt") Prompt
                                input.form-control(name="collect_information_prompt" type="text" required="true" "[(ngModel)]"="action.prompt" placeholder="e.g. Quantity")
                            .form-group
                                label(for="collect_information_text_equivalent") Text Equivalent
                                input.form-control(name="collect_information_text_equivalent" type="text" required="true" "[(ngModel)]"="action.textEquivalent" placeholder="")
                            .form-group
                                label(for="collect_information_response_binding") Response Binding
                                input.form-control(name="collect_information_response_binding" type="text" required="true" "[(ngModel)]"="action.responseBinding" placeholder="e.g. TotalScore")
                            .form-group
                                label(for="collect_information_response_data_type") Data Type
                                select.form-control(name="collect_information_response_data_type" "[(ngModel)]"="action.responseDataType")
                                    option(value="String" "[selected]"="action.responseDataType == 'String'") String
                                    option(value="Integer" "[selected]"="action.responseDataType == 'Integer'") Integer
                            .form-group
                                label(for="collect_information_response_minimum") Minimum
                                input.form-control(name="collect_information_response_minimum" type="number" min="0" required="true" "[(ngModel)]"="action.responseMinimum" placeholder="0")
                            .form-group
                                label(for="collect_information_response_maximum") Maximum
                                input.form-control(name="collect_information_response_maximum" type="number" min="0" required="true" "[(ngModel)]"="action.responseMaximum" placeholder="42")
                            .form-group
                                label(for="collect_information_response_cardinality") Cardinality
                                select.form-control(name="collect_information_response_cardinality" "[(ngModel)]"="action.responseCardinality")
                                    option(value="Multiple" "[selected]"="action.responseCardinality == 'Multiple'") Multiple
                                    option(value="Single" "[selected]"="action.responseCardinality == 'Single'") Single
                        .col-md-8
                            .form-group
                                label(for="collect_information_initial_value") Initial Value ELM Expression
                                textarea.form-control(name="collect_information_initial_value" rows="4" "[(ngModel)]"="action.initialValue" placeholder="")
                            h5
                                .pull-right
                                    a.btn.btn-small.btn-primary("(click)"="createItemCode(action)")
                                        span.glyphicon.glyphicon-plus
                                | Item Codes
                            table.table.table-condensed
                                thead
                                    tr
                                        th Code
                                        th Code System
                                        th System Name
                                        th
                                tbody
                                    tr("*ngFor"="let ic of action.itemCodes")
                                        td
                                            input.form-control(name="collect_information_item_code" "[(ngModel)]"="ic.code" placeholder="38220-0")
                                        td
                                            input.form-control(name="collect_information_item_code_system" "[(ngModel)]"="ic.codeSystem" placeholder="2.16.840.1.113883.6.1")
                                        td
                                            input.form-control(name="collect_information_item_code_system_name" "[(ngModel)]"="ic.codeSystemName" placeholder="LOINC")
                                        td
                                            a.btn.btn-small.btn-danger("(click)"="deleteItemCode(action, ic)")
                                                span.glyphicon.glyphicon-trash


                            h5
                                .pull-right
                                    a.btn.btn-small.btn-primary("(click)"="createResponseItem(action)")
                                        span.glyphicon.glyphicon-plus
                                | Enumerated Responses
                            table.table.table-condensed
                                thead
                                    tr
                                        th Type
                                        th Value
                                        th Value Type
                                        th Display Text
                                        th
                                tbody
                                    tr("*ngFor"="let ri of action.responseItems")
                                        td
                                            select.form-control(name="collect_information_response_item_type" "[(ngModel)]"="ri.type")
                                                option(value="elm:Literal" "[selected]"="ri.type == 'elm:Literal'") elm:Literal
                                        td
                                            input.form-control(name="collect_information_response_item_value" "[(ngModel)]"="ri.value" placeholder="")
                                        td
                                            select.form-control(name="collect_information_response_value_type" "[(ngModel)]"="ri.valueType")
                                                option(value="t:Integer" "[selected]"="ri.type == 't:Integer'") t:Integer
                                        td
                                            input.form-control(name="collect_information_response_item_display_text" "[(ngModel)]"="ri.displayText" placeholder="No particular expression or smile")
                                        td
                                            a.btn.btn-small.btn-danger("(click)"="deleteResponseItem(action, ri)")
                                                span.glyphicon.glyphicon-trash

                .create_action("*ngIf"="isCreateAction(action)")
                    h4 Create
                    i (nothing else to do for this action type)
                .action_group("*ngIf"="isActionGroup(action)")
                    h4 Sub Group
                    action_group("[knart]"="knart" "[actionGroup]"="action")
